namespace PendleCodeMonkey.ProjectEulerCS
{
	internal class Problem2
	{

		/* -----------------------------------------------------------------------------------------------------------------------------------------------------
			Problem 2 - Even Fibonacci numbers


				Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

					1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

				By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

		----------------------------------------------------------------------------------------------------------------------------------------------------- */

		static internal int Solve()
		{
			// Local function that generates the Fibonacci sequence, stopping when the values exceed four million.
			static IEnumerable<int> FibonacciSeq()
			{
				int prev = 0, next = 1, sum = 0;
				while ((sum = prev + next) < 4000000)
				{
					prev = next;
					next = sum;
					yield return sum;
				}
			}

			// Using the values in the Fibonacci sequence generated by the above local function
			// Filter out the ones that are exactly divisible by 2 (i.e the even values)
			// and then compute the sum of the filtered values.
			return FibonacciSeq()
				.Where(i => i % 2 == 0)
				.Sum();
		}
	}
}
